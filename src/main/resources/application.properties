# DATABASE
# h2(local)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.datasource.jdbcurl=jdbc:h2:tcp://localhost/~/test
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.jdbcurl=jdbc:mysql://babyfood-database.crfubebnxuuv.ap-northeast-2.rds.amazonaws.com:3306/recipe_db?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&serverTimezone=Asia/Seoul 
spring.datasource.username=admin
spring.datasource.password=kyobo11!
spring.datasource.name=classpath:/mapper/*.xml

# JPA
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
spring.jpa.hibernate.ddl-auto=none

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# true 설정시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true

# redis 설정
spring.session.store-type=redis
spring.redis.host=192.168.1.226
spring.redis.port=6379
spring.main.allow-bean-definition-overriding=true
spring.cache.type=redis
spring.cache.redis.time-to-live=60000
spring.cache.redis.cache-null-values=true

#spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# spring.web.resources.static-locations=classpath:/resources/,classpath:/static/

# logging
logging.level.root=info
logging.file.name=logs/microservice-platform-recipe.log
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul